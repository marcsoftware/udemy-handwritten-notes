1
00:00:00,330 --> 00:00:06,110
OK hello bloggers and welcome to this lecture you're going to look at audience 101.

2
00:00:06,270 --> 00:00:10,200
What is audience sense for relational database service.

3
00:00:10,290 --> 00:00:15,690
So I guess the best place to start with is what is a relational database or relational databases or

4
00:00:15,690 --> 00:00:21,600
what most of us use to and the been around since the 70s and I want you to think of a traditional spreadsheet.

5
00:00:21,600 --> 00:00:27,720
So in your spreadsheet you've got a spreadsheet is basically a database you've got the actual spreadsheet

6
00:00:27,720 --> 00:00:34,380
itself which consists of workbooks and then a workbook is essentially a table so you can switch between

7
00:00:34,380 --> 00:00:39,050
the different workbooks inside an Excel spreadsheet for example.

8
00:00:39,180 --> 00:00:42,270
And then when you're actually in the tables they consist of two things.

9
00:00:42,270 --> 00:00:46,020
They consist of rows and they consist of fields or columns.

10
00:00:46,020 --> 00:00:50,640
So that's all a relational database is you have a database that will be filled with a whole bunch of

11
00:00:50,640 --> 00:00:54,200
different tables and each table has rows and columns.

12
00:00:54,210 --> 00:00:56,090
So here's a good example of that database.

13
00:00:56,090 --> 00:01:02,070
This is a student database for example so we've got our ID we've got our first name our surname and

14
00:01:02,070 --> 00:01:02,870
our gender.

15
00:01:03,000 --> 00:01:08,650
So we've got four fields of four columns in this database and then we've got individual rows.

16
00:01:08,670 --> 00:01:14,880
So a student ID one is myself and student ID 2 is John Adams.

17
00:01:14,940 --> 00:01:19,870
STUDENT 3 is Julia Clark and student ID for is Erica stick here.

18
00:01:19,890 --> 00:01:26,310
So this is the data that basically makes up a relational database it's pretty pretty simple.

19
00:01:26,310 --> 00:01:28,830
So what are the different relational database types.

20
00:01:28,830 --> 00:01:31,460
You can have with Amazon's Adia service.

21
00:01:31,470 --> 00:01:33,970
Well first off we have Microsoft sequel server.

22
00:01:34,110 --> 00:01:35,270
We then have Oracle.

23
00:01:35,370 --> 00:01:37,080
We then have my sequel's server.

24
00:01:37,080 --> 00:01:43,080
We then have postscripts So we then have Amazon's own database technology which is called Amazon Aurora.

25
00:01:43,260 --> 00:01:45,390
And then we also have Maria de base.

26
00:01:45,400 --> 00:01:51,390
So these are the six instances that you can provision within D.S. and in the next lab what we're going

27
00:01:51,390 --> 00:01:57,300
to do is we're going to go ahead and provision a my Seacole instance Amazon Aurora is just worth noting.

28
00:01:57,300 --> 00:02:01,760
It is Amazon's own flagship database technology.

29
00:02:01,860 --> 00:02:06,960
It's fully compatible with my Sakal So if you've got my Silkwood database you can ship it over to Aurora

30
00:02:07,290 --> 00:02:12,400
and we will cover Aurora in a lot more detail as we go through the course.

31
00:02:12,750 --> 00:02:18,270
It's worth also mentioning what a non relational database is just so you know we're going to have a

32
00:02:18,270 --> 00:02:23,720
whole section on non-relational databases and in particular dynamite Bay.

33
00:02:23,820 --> 00:02:29,570
But basically a non relational database is a database and inside the database we have a collection.

34
00:02:29,580 --> 00:02:32,500
We have documents and we have key value pairs.

35
00:02:32,550 --> 00:02:35,380
So what's a collection collection is basically a table.

36
00:02:35,400 --> 00:02:36,540
Think of it that way.

37
00:02:36,540 --> 00:02:43,170
A document is simply a row in that table and the document comprises of a whole bunch of different key

38
00:02:43,170 --> 00:02:44,430
value pairs.

39
00:02:44,430 --> 00:02:50,630
Now the cool thing about non-relational databases is that you don't need to pre define the table structure.

40
00:02:50,640 --> 00:02:55,950
So if you remember from the last one where we had the ID the first name the surname and agenda that

41
00:02:55,980 --> 00:03:01,170
all has to be predefined before you can put data into it with non-relational databases you don't need

42
00:03:01,170 --> 00:03:04,380
to pre-define your columns you can add them as you go.

43
00:03:04,520 --> 00:03:06,030
So let's have a look at an example.

44
00:03:06,030 --> 00:03:08,190
So this is some Jason or no see call.

45
00:03:08,190 --> 00:03:09,800
So we have got our ID.

46
00:03:09,930 --> 00:03:15,270
We've got our first name our surname our age and we've got our address and inside our address we've

47
00:03:15,270 --> 00:03:17,360
got our straight and our suburb.

48
00:03:17,400 --> 00:03:23,220
So if we look at the I.D. It's a key value pair and it basically within Jason it always will start with

49
00:03:23,220 --> 00:03:30,390
this curly bracket and then followed by quotation marks and then you'll have a field in this field is

50
00:03:30,390 --> 00:03:36,120
going to be essentially your column and then you going to have a colon and then we're going to have

51
00:03:36,120 --> 00:03:39,090
more quotation marks and then the actual data itself.

52
00:03:39,090 --> 00:03:40,570
So what is the ID.

53
00:03:40,710 --> 00:03:42,380
OK it's this number here.

54
00:03:42,630 --> 00:03:47,220
Then we close out the quotations and then we do a comma and then we start over again so we can add as

55
00:03:47,220 --> 00:03:49,530
much info in here as we want.

56
00:03:49,740 --> 00:03:54,000
And this will all form rower's inside our non relational databases.

57
00:03:54,090 --> 00:03:58,380
And in some non relational databases you can also have nested fields in the address we can have this

58
00:03:58,380 --> 00:03:58,850
straight.

59
00:03:58,860 --> 00:04:02,820
We could have the Subah we could have the apartment number et cetera et cetera.

60
00:04:02,820 --> 00:04:04,700
Now don't worry too much about this just yet.

61
00:04:04,710 --> 00:04:10,830
We will have a whole section of the course on Amazon's known relational database flagship product which

62
00:04:10,830 --> 00:04:13,710
is dynamite bay that is coming up.

63
00:04:13,710 --> 00:04:19,200
Another thing to mention around databases is what data warehousing is so data warehousing is used for

64
00:04:19,200 --> 00:04:25,230
business intelligence and tools like Cognos just pissed off sequel's server sorry sequencing or reporting

65
00:04:25,230 --> 00:04:33,330
services Arko Hyperion and SAP NetWeaver are all business intelligence tools and what they do is they

66
00:04:33,690 --> 00:04:40,260
pull in very large and complex data sets and is usually used by management to do queries on data such

67
00:04:40,260 --> 00:04:46,950
as current performance versus targets etc. and you can actually build these databases specifically so

68
00:04:46,950 --> 00:04:52,140
that they're not production databases but they're actually data warehouses that are used for reporting

69
00:04:52,170 --> 00:04:57,780
only so your production database might push out all the information to a data warehouse.

70
00:04:57,900 --> 00:05:02,720
And when you're running these really into queries you want to do that on your data warehouse and not

71
00:05:02,720 --> 00:05:06,430
on your production database because you don't want to bring your production database down.

72
00:05:06,540 --> 00:05:13,070
And so we also should look at online transaction processing versus online analytics processing and that's

73
00:05:13,070 --> 00:05:19,400
basically coming back to that example so online transaction processing differs from online analytics

74
00:05:19,400 --> 00:05:22,870
processing in terms of the types of queries that you run.

75
00:05:23,030 --> 00:05:26,780
So an online transaction processing could be an example of an online store.

76
00:05:26,780 --> 00:05:32,990
Somebody places an order the order number is 2 1 2 1 to 1 and it basically that's going to pull up a

77
00:05:32,990 --> 00:05:39,170
row of data such as the name of the person who's placing the order the date the address to deliver to

78
00:05:39,170 --> 00:05:40,730
the delivery status et cetera.

79
00:05:40,730 --> 00:05:46,910
So it's going to write a piece of let's just say a row of data to a database so that's an online transaction

80
00:05:46,910 --> 00:05:51,200
processing these transactions all happen much more frequently.

81
00:05:51,260 --> 00:05:57,490
But they'll be very very simple transactions so just be insert into this table this data.

82
00:05:57,620 --> 00:06:01,510
Whereas online analytics processing could be something much more complex.

83
00:06:01,520 --> 00:06:06,830
Perhaps you are trying to figure out a net profit for a Maea and Pacific for a digital radio product.

84
00:06:06,950 --> 00:06:11,480
And so you've got a pull in large numbers of records you've got to basically add up the number of radios

85
00:06:11,480 --> 00:06:13,970
sold in Europe Middle East and Africa.

86
00:06:13,970 --> 00:06:19,820
So Mia the number of radios sold in the Pacific and then you've got to come up with the unit cost of

87
00:06:19,820 --> 00:06:24,410
the radios and age they'll probably be different than the sales price of a radio.

88
00:06:24,560 --> 00:06:29,360
And then you basically have to figure out what the sales price is minus the unit cost and we also might

89
00:06:29,360 --> 00:06:32,870
have some kind of foreign currency conversion as well.

90
00:06:32,870 --> 00:06:36,070
So it's going to be doing an awful lot in one query.

91
00:06:36,080 --> 00:06:41,780
So data warehousing databases use different types of architecture both from a database perspective as

92
00:06:41,780 --> 00:06:46,940
a global is also down to the physical infrastructure layer to maximize the performance on these types

93
00:06:46,940 --> 00:06:47,640
of queries.

94
00:06:47,780 --> 00:06:52,910
So o pay will be very very simple transactions that happen very very frequently.

95
00:06:53,110 --> 00:06:59,150
Well IP will be much more complex transactions that will happen very infrequently.

96
00:06:59,150 --> 00:07:01,840
And then finally we're going to move on to elastic cash.

97
00:07:01,850 --> 00:07:06,940
So less cash is basically a web service that makes it easy to deploy operate and scale and in-memory

98
00:07:07,080 --> 00:07:12,620
case in the cloud and the service improves the performance of web applications by basically allowing

99
00:07:12,620 --> 00:07:19,070
you to retrieve information from fast in memory Keisha's instead of relying entirely on slower disk

100
00:07:19,070 --> 00:07:20,350
based databases.

101
00:07:20,360 --> 00:07:25,810
So basically if you're going to a store and let's say you want to see the top 10 items that's on sale

102
00:07:26,270 --> 00:07:31,130
you don't want every single user to pull that from your production database because you can just cache

103
00:07:31,130 --> 00:07:31,660
that.

104
00:07:31,700 --> 00:07:37,130
So you could cache that using elastic cache and then that way you take a load off your database and

105
00:07:37,370 --> 00:07:43,040
typically what you're going to see in your exam is a whole bunch of what you know architectural changes

106
00:07:43,040 --> 00:07:46,120
could you make in order to make your databases run faster.

107
00:07:46,150 --> 00:07:52,630
So less to cache is a great way of caching frequently access information and so that when users go and

108
00:07:52,670 --> 00:07:56,660
try and access that they don't have to pull it from the database they can pull it from elastic cache

109
00:07:57,040 --> 00:08:01,220
and elastic cache actually supports to open source in memory caching engines.

110
00:08:01,220 --> 00:08:02,730
So we've got memcached.

111
00:08:02,930 --> 00:08:05,930
We've got rid us will have a lecture comparing the two.

112
00:08:06,050 --> 00:08:07,830
Later on in the course.

113
00:08:08,030 --> 00:08:12,140
So that is really it for this lecture let's just have a look at what we've learnt so we've learnt that

114
00:08:12,230 --> 00:08:15,360
Adhya is basically online transaction processing.

115
00:08:15,410 --> 00:08:20,400
It consists of sequel my sequel postscripts Kuo recall Aurora and Maria de Bay.

116
00:08:20,600 --> 00:08:24,410
We've got dynamite Bay which is Amazon's no sequel offering.

117
00:08:24,590 --> 00:08:29,630
And we're going to cover that off as a whole section in the course and then we've got a redshift which

118
00:08:29,690 --> 00:08:33,080
is Amazon's online analytics processing.

119
00:08:33,260 --> 00:08:36,630
And this is used for business intelligence and big data.

120
00:08:36,890 --> 00:08:42,110
And then finally we have the elastic cache and this is in-memory caching and this is used to improve

121
00:08:42,170 --> 00:08:47,090
the performance of the databases in the AWOS cloud.

122
00:08:47,180 --> 00:08:49,800
And we have two engines inside that we've got memcached.

123
00:08:49,880 --> 00:08:54,200
And we've got read us so that is it for this lecture guys and the next Lechuga we're going to do is

124
00:08:54,200 --> 00:08:56,700
go in and provision a little DNS server.

125
00:08:56,840 --> 00:09:03,170
We're then going to go ahead and make sure our little web server can connect to that audio server and

126
00:09:03,170 --> 00:09:08,390
raid Fromont and then we're going to get a bit more hands on and start doing some more complicated stuff

127
00:09:08,390 --> 00:09:08,900
with audio.

128
00:09:08,900 --> 00:09:10,990
So if you've got the time please join me in the next lecture.

129
00:09:11,030 --> 00:09:11,480
Thank you.
